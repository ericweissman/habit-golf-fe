// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stats should correctly match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Stats />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="date-btns"
        >
          <button
            onClick={[Function]}
            value="today"
          >
            today
          </button>
          <button
            onClick={[Function]}
            value="all time"
          >
            all time
          </button>
        </div>,
        <div
          className="graph-area"
        >
          <ReactMinimalPieChart
            animate={false}
            animationDuration={500}
            animationEasing="ease-out"
            className="graph"
            cx={50}
            cy={50}
            data={
              Array [
                Object {
                  "color": "#E38627",
                  "title": "One",
                  "value": 1.1,
                },
                Object {
                  "color": "#C13C37",
                  "title": "Two",
                  "value": 1.9,
                },
                Object {
                  "color": "#6A2135",
                  "title": "Three",
                  "value": 20,
                },
              ]
            }
            label={false}
            labelPosition={50}
            lengthAngle={360}
            lineWidth={100}
            paddingAngle={0}
            radius={50}
            ratio={1}
            rounded={false}
            startAngle={0}
          />
        </div>,
        <button />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              onClick={[Function]}
              value="today"
            >
              today
            </button>,
            <button
              onClick={[Function]}
              value="all time"
            >
              all time
            </button>,
          ],
          "className": "date-btns",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "today",
              "onClick": [Function],
              "value": "today",
            },
            "ref": null,
            "rendered": "today",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "all time",
              "onClick": [Function],
              "value": "all time",
            },
            "ref": null,
            "rendered": "all time",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ReactMinimalPieChart
            animate={false}
            animationDuration={500}
            animationEasing="ease-out"
            className="graph"
            cx={50}
            cy={50}
            data={
              Array [
                Object {
                  "color": "#E38627",
                  "title": "One",
                  "value": 1.1,
                },
                Object {
                  "color": "#C13C37",
                  "title": "Two",
                  "value": 1.9,
                },
                Object {
                  "color": "#6A2135",
                  "title": "Three",
                  "value": 20,
                },
              ]
            }
            label={false}
            labelPosition={50}
            lengthAngle={360}
            lineWidth={100}
            paddingAngle={0}
            radius={50}
            ratio={1}
            rounded={false}
            startAngle={0}
          />,
          "className": "graph-area",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animate": false,
            "animationDuration": 500,
            "animationEasing": "ease-out",
            "className": "graph",
            "cx": 50,
            "cy": 50,
            "data": Array [
              Object {
                "color": "#E38627",
                "title": "One",
                "value": 1.1,
              },
              Object {
                "color": "#C13C37",
                "title": "Two",
                "value": 1.9,
              },
              Object {
                "color": "#6A2135",
                "title": "Three",
                "value": 20,
              },
            ],
            "label": false,
            "labelPosition": 50,
            "lengthAngle": 360,
            "lineWidth": 100,
            "onClick": undefined,
            "onMouseOut": undefined,
            "onMouseOver": undefined,
            "paddingAngle": 0,
            "radius": 50,
            "ratio": 1,
            "rounded": false,
            "startAngle": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="date-btns"
          >
            <button
              onClick={[Function]}
              value="today"
            >
              today
            </button>
            <button
              onClick={[Function]}
              value="all time"
            >
              all time
            </button>
          </div>,
          <div
            className="graph-area"
          >
            <ReactMinimalPieChart
              animate={false}
              animationDuration={500}
              animationEasing="ease-out"
              className="graph"
              cx={50}
              cy={50}
              data={
                Array [
                  Object {
                    "color": "#E38627",
                    "title": "One",
                    "value": 1.1,
                  },
                  Object {
                    "color": "#C13C37",
                    "title": "Two",
                    "value": 1.9,
                  },
                  Object {
                    "color": "#6A2135",
                    "title": "Three",
                    "value": 20,
                  },
                ]
              }
              label={false}
              labelPosition={50}
              lengthAngle={360}
              lineWidth={100}
              paddingAngle={0}
              radius={50}
              ratio={1}
              rounded={false}
              startAngle={0}
            />
          </div>,
          <button />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                onClick={[Function]}
                value="today"
              >
                today
              </button>,
              <button
                onClick={[Function]}
                value="all time"
              >
                all time
              </button>,
            ],
            "className": "date-btns",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "today",
                "onClick": [Function],
                "value": "today",
              },
              "ref": null,
              "rendered": "today",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "all time",
                "onClick": [Function],
                "value": "all time",
              },
              "ref": null,
              "rendered": "all time",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ReactMinimalPieChart
              animate={false}
              animationDuration={500}
              animationEasing="ease-out"
              className="graph"
              cx={50}
              cy={50}
              data={
                Array [
                  Object {
                    "color": "#E38627",
                    "title": "One",
                    "value": 1.1,
                  },
                  Object {
                    "color": "#C13C37",
                    "title": "Two",
                    "value": 1.9,
                  },
                  Object {
                    "color": "#6A2135",
                    "title": "Three",
                    "value": 20,
                  },
                ]
              }
              label={false}
              labelPosition={50}
              lengthAngle={360}
              lineWidth={100}
              paddingAngle={0}
              radius={50}
              ratio={1}
              rounded={false}
              startAngle={0}
            />,
            "className": "graph-area",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "animate": false,
              "animationDuration": 500,
              "animationEasing": "ease-out",
              "className": "graph",
              "cx": 50,
              "cy": 50,
              "data": Array [
                Object {
                  "color": "#E38627",
                  "title": "One",
                  "value": 1.1,
                },
                Object {
                  "color": "#C13C37",
                  "title": "Two",
                  "value": 1.9,
                },
                Object {
                  "color": "#6A2135",
                  "title": "Three",
                  "value": 20,
                },
              ],
              "label": false,
              "labelPosition": 50,
              "lengthAngle": 360,
              "lineWidth": 100,
              "onClick": undefined,
              "onMouseOut": undefined,
              "onMouseOver": undefined,
              "paddingAngle": 0,
              "radius": 50,
              "ratio": 1,
              "rounded": false,
              "startAngle": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
