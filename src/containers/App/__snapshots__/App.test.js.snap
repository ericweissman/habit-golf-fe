// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should correctly match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    club="wedges"
    error=""
    isLoading={false}
    setActiveClub={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [
            "irons",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "irons",
          },
          Object {
            "isThrow": false,
            "value": "irons",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          habit golf
        </h1>,
        "",
        <Home
          changeClub={[Function]}
          changeFilter={[Function]}
          club="wedges"
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "habit golf",
        },
        "ref": null,
        "rendered": "habit golf",
        "type": "h1",
      },
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "changeClub": [Function],
          "changeFilter": [Function],
          "club": "wedges",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            habit golf
          </h1>,
          "",
          <Home
            changeClub={[Function]}
            changeFilter={[Function]}
            club="wedges"
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "habit golf",
          },
          "ref": null,
          "rendered": "habit golf",
          "type": "h1",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "changeClub": [Function],
            "changeFilter": [Function],
            "club": "wedges",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`App should correctly match the snapshot if there is a new user 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    club="wedges"
    error=""
    isLoading={false}
    setActiveClub={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [
            "irons",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "irons",
          },
          Object {
            "isThrow": false,
            "value": "irons",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          habit golf
        </h1>,
        "",
        <NewUser />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "habit golf",
        },
        "ref": null,
        "rendered": "habit golf",
        "type": "h1",
      },
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            habit golf
          </h1>,
          "",
          <NewUser />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "habit golf",
          },
          "ref": null,
          "rendered": "habit golf",
          "type": "h1",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`App should correctly match the snapshot if there is no user logged in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    club="wedges"
    error=""
    isLoading={false}
    setActiveClub={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [
            "irons",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "irons",
          },
          Object {
            "isThrow": false,
            "value": "irons",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          habit golf
        </h1>,
        "",
        <SignIn
          newUser={[Function]}
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "habit golf",
        },
        "ref": null,
        "rendered": "habit golf",
        "type": "h1",
      },
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "newUser": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            habit golf
          </h1>,
          "",
          <SignIn
            newUser={[Function]}
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "habit golf",
          },
          "ref": null,
          "rendered": "habit golf",
          "type": "h1",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "newUser": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`App should match the correct snapshot if the filter is Premium Content 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    club="wedges"
    error=""
    isLoading={false}
    setActiveClub={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [
            "irons",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "irons",
          },
          Object {
            "isThrow": false,
            "value": "irons",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          habit golf
        </h1>,
        "",
        <PremiumContent
          changeFilter={[Function]}
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "habit golf",
        },
        "ref": null,
        "rendered": "habit golf",
        "type": "h1",
      },
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "changeFilter": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            habit golf
          </h1>,
          "",
          <PremiumContent
            changeFilter={[Function]}
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "habit golf",
          },
          "ref": null,
          "rendered": "habit golf",
          "type": "h1",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "changeFilter": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`App should match the correct snapshot if the filter is Ratings 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    club="wedges"
    error=""
    isLoading={false}
    setActiveClub={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [
            "irons",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "irons",
          },
          Object {
            "isThrow": false,
            "value": "irons",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          habit golf
        </h1>,
        "",
        <Connect(Ratings)
          changeFilter={[Function]}
          club="wedges"
          random={[Function]}
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "habit golf",
        },
        "ref": null,
        "rendered": "habit golf",
        "type": "h1",
      },
      "",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "changeFilter": [Function],
          "club": "wedges",
          "random": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            habit golf
          </h1>,
          "",
          <Connect(Ratings)
            changeFilter={[Function]}
            club="wedges"
            random={[Function]}
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "habit golf",
          },
          "ref": null,
          "rendered": "habit golf",
          "type": "h1",
        },
        "",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "changeFilter": [Function],
            "club": "wedges",
            "random": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`App should match the correct snapshot if there is an Error 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    club="wedges"
    error="ERROR"
    isLoading={false}
    setActiveClub={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [
            "irons",
          ],
          Array [],
          Array [
            "irons",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": "irons",
          },
          Object {
            "isThrow": false,
            "value": "irons",
          },
          Object {
            "isThrow": false,
            "value": "irons",
          },
          Object {
            "isThrow": false,
            "value": "irons",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          habit golf
        </h1>,
        <Error
          error="ERROR"
        />,
        <Home
          changeClub={[Function]}
          changeFilter={[Function]}
          club="wedges"
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "habit golf",
        },
        "ref": null,
        "rendered": "habit golf",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "error": "ERROR",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "changeClub": [Function],
          "changeFilter": [Function],
          "club": "wedges",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            habit golf
          </h1>,
          <Error
            error="ERROR"
          />,
          <Home
            changeClub={[Function]}
            changeFilter={[Function]}
            club="wedges"
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "habit golf",
          },
          "ref": null,
          "rendered": "habit golf",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "error": "ERROR",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "changeClub": [Function],
            "changeFilter": [Function],
            "club": "wedges",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
